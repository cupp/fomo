# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson


'.source.fomo':
  'hint':
    'prefix': 'h'
    'body': '=\t\t‚å© $1 ‚å™\n\t$2'
  'quantification':
    'prefix': 'q'
    'body': '($1 | $2 : $3)$4'
  'comprehension':
    'prefix': 'c'
    'body': '{$1 | $2 : $3}$4'
  'seperator':
    'prefix': 'sep'
    'body':  '\n------------------------------\n\n'

  'negation':
    'prefix': 'n'
    'body': '¬¨'
  'equivalence':
    'prefix': 'e'
    'body': '‚â° '
  'nonequivalence':
    'prefix': 'ne'
    'body': '‚â¢ '
  'differs from':
    'prefix': 'neq'
    'body': '‚â† '
  'disjunction':
    'prefix': 'o'
    'body': '‚ãÅ '
  'conjunction':
    'prefix': 'a'
    'body': '‚ãÄ '
  'implication':
    'prefix': 'i'
    'body': '‚áí '
  'follows from':
    'prefix': 'f'
    'body': '‚áê '
  'does not imply':
    'prefix': 'ni'
    'body': '‚áè '
  'does not follow from':
    'prefix': 'nf'
    'body': '‚áç '
  'gets':
    'prefix': 'g'
    'body': '‚âî '
  'replaced by':
    'prefix': 'r'
    'body': '‚âî '
  'star':
    'prefix': 'star'
    'body': '‚òÖ'
  'at least':
    'prefix': 'le'
    'body': '‚â§ '
  'at most':
    'prefix': 'ge'
    'body': '‚â• '
  'for all':
    'prefix': 'for'
    'body': '‚àÄ'
  'there exists':
    'prefix': 'ex'
    'body': '‚àÉ'
  'element of':
    'prefix': 'el'
    'body': '‚àä '
  'proper subset':
    'prefix': 'sub'
    'body': '‚äÇ '
  'subset':
    'prefix': 'sube'
    'body': '‚äÜ '
  'proper superset':
    'prefix': 'suu'
    'body': '‚äÉ '
  'superset':
    'prefix': 'supe'
    'body': '‚äá '
  'union':
    'prefix': 'un'
    'body': '‚à™ '
  'intersection':
    'prefix': 'in'
    'body': '‚à© '
  'empty set':
    'prefix': 'es'
    'body': '‚àÖ'
  'Type: Integer':
    'prefix': 'tz'
    'body': '‚Ñ§'
  'Type: Natural':
    'prefix': 'tn'
    'body': '‚Ñï'
  'Type: Rational':
    'prefix': 'tq'
    'body': '‚Ñö'
  'Type: Real':
    'prefix': 'tr'
    'body': '‚Ñù'
  'Type: Boolean':
    'prefix': 'tb'
    'body': 'ùîπ'
  'end of proof':
    'prefix': '//'
    'body': '‚ï±‚ï±\n\n'
