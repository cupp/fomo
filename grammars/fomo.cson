'scopeName': 'source.fomo'
'name': "language-fomo"
'fileTypes': [
  'fm'
  'fomo'
]

'patterns': [
  # {
  #   'comment': 'marked'
  #   'name': 'constant.other.fm'
  #   'match': '_.*_'
  # }
  # {
  #   'comment': 'error'
  #   'name': 'entity.name.function.fm'
  #   'match': '^.*(xx)$'
  #   'captures':
  #     '1':
  #       'name': 'variable.other.fm'
  # }
  {
    'comment': 'hint'
    'name': 'comment.line.fm'
    'match': '〈.*?〉'
  }
  # {
  #   'comment': 'header'
  #   'name': 'variable.other.fm'
  #   'match': '^\w+:.*$'
  # }
  {
    'comment': 'seperator'
    'name': 'variable.other.fm'
    'match': '([:|])'
  }

  {
    'comment': 'proposition'
    'name':  'entity.name.tag.fm'
    'match': '^PROVE\s|^WHICH IS\s'
  }
  {
    'comment': 'boolean literal'
    'name': 'markup.bold.fm'
    'match': 'true|false'
  }
  {
    'comment': 'negated variable'
    'name': 'variable.language.fm'
    'match': '¬([A-Za-z])\W|¬([A-Za-z])$'
    'captures':
      '1' :
        'name': 'markup.italic.fm'
      '2' :
        'name': 'markup.italic.fm'
  }

  {
    'comment': 'variable'
    'name': 'markup.italic.fm'
    'match': '([A-Z])|([a-z])|^([A-Za-z])\W|\W([A-Za-z])$|^([A-Za-z])$'
    'captures':
      '1' :
        'name': 'markup.italic.fm'
      '2' :
        'name': 'markup.italic.fm'
      '3' :
        'name': 'markup.italic.fm'
      '4' :
        'name': 'markup.italic.fm'
      '5' :
        'name': 'markup.italic.fm'
  }

  {
    'comment': 'operator'
    'name': 'constant.other.fm'
    'match': '([/≡=¬≢≠≥≤⇒⇐⇍⇏≔<>∈∅Ʊ⊂⊃⊆⊇∉⊄⊅⊈⊉∪∩#~⋅*∘∙÷×Ρ↓↑◃▹★∀∃⋁⋀+-^])'
  }

  {
    'comment': 'parens'
    'name':  'constant.other.fm'
    'match':  '([\)\(\{\}])'
  }

]
